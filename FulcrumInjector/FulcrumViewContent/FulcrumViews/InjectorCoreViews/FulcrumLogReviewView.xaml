<UserControl x:Class="FulcrumInjector.FulcrumViewContent.FulcrumViews.InjectorCoreViews.FulcrumLogReviewView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             mc:Ignorable="d" 
             xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             Loaded="FulcrumLogReviewView_OnLoaded"
             d:DesignHeight="450" d:DesignWidth="800"
             DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ViewModel}">

    <!-- Style Sheets -->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../FulcrumViewSupport/FulcrumStyles/AppStyleSheets/FulcrumControlStyles.xaml"/>
                <ResourceDictionary Source="../../../FulcrumViewSupport/FulcrumStyles/AppStyleSheets/FulcrumLogReviewViewStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <!-- Content For Log Reviewing -->
    <Grid Margin="5,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="105"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Title and information -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height=".70*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Margin="0,0,15,0" x:Name="MainActionLoadButtons">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".665*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                    Grid.Row="0"
                    Margin="10,0,0,0"
                    Text="Injector Log Review" 
                    HorizontalAlignment="Left"
                    Style="{StaticResource TitleStringText}"/>
                <Grid Grid.Column="1" Margin="0,7,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button
                        Margin="5,2"
                        Style="{StaticResource ActionButtonStyle}"
                        Grid.Column="0" Click="LoadInjectorLogFile_OnClick"
                        Content="Load Log File" VerticalAlignment="Stretch"/>
                    <Button
                        Margin="5,2" x:Name="BuildExpressionsButton"
                        Grid.Column="1" Click="BuildExpressionsButton_OnClick"
                        Content="Process Content" VerticalAlignment="Stretch">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ActionButtonStyle}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLogLoaded}" Value="false">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button
                        Margin="5,2" Grid.Column="2" Content="Build Simulation" x:Name="BuildSimulationButton"
                        VerticalAlignment="Stretch" Click="BuildSimulationButton_OnClick">
                        <Button.Style>
                            <Style BasedOn="{StaticResource ActionButtonStyle}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLogLoaded}" Value="false">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                           </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
            <TextBlock Grid.Row="1" FontSize="14" TextWrapping="Wrap" VerticalAlignment="Center" Margin="10,0,20,0" TextAlignment="Justify"> 
                <Run Foreground="{StaticResource TextColorBase}" Text="This view is used to load in previously run J2534 Logs from the Fulcrum Injector and provide a detailed command breakdown of each instance/command run during a session. These values are both outlined in a per command format and highlighted on the output log viewer."/>
                <Run Foreground="Yellow" FontWeight="DemiBold" Text="Detailed breakdown views and simulation replaying are done on the Simulation Review Page"/>
            </TextBlock>
        </Grid>

        <!-- Splitting Border -->
        <Border Grid.Row="1" Margin="10,3,10,2"
                BorderBrush="{StaticResource TextColorBase}" 
                BorderThickness="0,2,0,0" VerticalAlignment="Center"/>

        <!-- Raw Log File Contents and PT Command Contents -->
        <Grid Grid.Row="2" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!-- Currently Loaded file -->
            <Grid Grid.Row="0" Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width=".5*"/>
                    <ColumnDefinition Width=".5*"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Row="0" x:Name="FilteringLogFileTextBox"
                             Style="{StaticResource InputTextWithHolder}" 
                             VerticalAlignment="Stretch" IsReadOnly="False" Margin="0,5,10,2"
                             Tag="Enter a filter or @r regex" Grid.Column="0" TextChanged="LogFilteringTextBox_OnTextChanged"/>
                <Button Grid.Column="1" 
                            Margin="0,5,5,2"
                            x:Name="ToggleHighlightingButton"
                            Click="SyntaxHighlightingButton_OnClick"
                            Content="Syntax Highlighting"
                            IsEnabled="{Binding Path=IsLogLoaded}"
                            Style="{StaticResource ActionButtonStyle}">
                </Button>

                <ComboBox Grid.Column="2" Text="Raw Log Contents"
                          x:Name="ViewerContentComboBox"
                          FontSize="14" Margin="5,5,0,2"
                          IsEnabled="{Binding Path=IsLogLoaded}"
                          SelectionChanged="ViewerContentComboBox_OnSelectionChanged"
                          HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                    <ComboBox.Items>
                        <ComboBoxItem>Raw Log Contents</ComboBoxItem>
                        <ComboBoxItem>Expressions File</ComboBoxItem>
                        <ComboBoxItem>Simulation File</ComboBoxItem>
                    </ComboBox.Items>
                </ComboBox>

                <!-- 
                    <Button Style="{StaticResource ActionButtonStyle}" Grid.Column="2" 
                            Margin="5,5,0,2" x:Name="ToggleExpressionsTextButton" 
                            IsEnabled="{Binding ExpressionsBuilt}"
                            Content="Show Expressions" Click="ToggleViewerContentButton_OnClick"/>
                    <Button Style="{StaticResource ActionButtonStyle}" Grid.Column="3" 
                            Margin="5,5,0,2" x:Name="ToggleSimulationsTextButton" 
                            IsEnabled="{Binding SimulationBuilt}"
                            Content="Show Simulations" Click="ToggleViewerContentButton_OnClick"/>
                -->
            </Grid>

            <!-- Content for output -->
            <avalonedit:TextEditor
                    Grid.Row="1"
                    IsReadOnly="True"
                    x:Name="ReplayLogInputContent"
                    Style="{StaticResource LoggingOutputBoxStyle}"/>

            <Grid Grid.Row="1" Margin="10,5">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLogLoaded}" Value="false">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Border Opacity=".50" BorderThickness="3"
                            BorderBrush="{StaticResource TextColorBase}"
                            Background="{StaticResource SecondaryColor_Darker_65}"/>
                <TextBlock Foreground="{StaticResource TextColorBase}" TextWrapping="Wrap" 
                               Margin="30,20" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Run FontWeight="DemiBold" Foreground="Yellow" FontSize="24" Text="No Shim Log File Loaded!"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run FontSize="16" Text="Load a Shim log file using the Load Injector Log File button at the top right corner of this page. Once loaded, the contents of the file will appear here in a color coded output."/>
                </TextBlock>
            </Grid>
        </Grid>

        <!-- Flyout for Progress -->
        <mahapps:FlyoutsControl Grid.RowSpan="3" Grid.Row="0" Margin="50,95,70,60" Background="{StaticResource SecondaryColor}">
            <mahapps:Flyout 
                Background="{StaticResource PrimaryColor_Darker_65}"
                IsOpen="False" x:Name="ProcessingFlyout"
                Position="Top" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <!-- Empty Header Template -->
                <mahapps:Flyout.HeaderTemplate>
                    <DataTemplate/>
                </mahapps:Flyout.HeaderTemplate>

                <!-- Content for our main flyout -->
                <Border BorderBrush="{StaticResource TextColorBase}" 
                        BorderThickness="3" CornerRadius="2" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" Margin="-20,0,0,0">
                    <Grid Margin="50,70">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="150"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>
                        <TextBlock
                            Text="Processing Log Contents Now..." 
                            Style="{StaticResource TitleStringText}"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource ParsingInfoTextStyle}"
                                   Text="This process may take a long time if the file requested to parse out is a rather large log file. For log files around 25,000 lines long, conversion takes about 10 seconds. Should this process fail, or if it takes an extremely long time, enable generator debugging in the settings and try again. Then please create a ticket using the email page in this app so someone can look into conversion issues with this log file." Foreground="{StaticResource TextColorBase}"/>
                        <Grid VerticalAlignment="Bottom" Height="30" Grid.Row="2">
                            <Border BorderBrush="{StaticResource TextColorBase}" BorderThickness="3">
                                <ProgressBar Style="{StaticResource ParsingBarStyle}"/>
                            </Border>
                            <TextBlock Style="{StaticResource ParsingProgressTextStyle}"/>
                        </Grid>
                    </Grid>
                </Border>
            </mahapps:Flyout>
        </mahapps:FlyoutsControl>
    </Grid>
</UserControl>
